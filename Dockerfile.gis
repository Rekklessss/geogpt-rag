# Dockerfile for GeoGPT-RAG with Advanced GIS Tools
FROM ubuntu:22.04

# Prevent interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Python and build essentials
    python3.10 \
    python3-pip \
    python3-dev \
    build-essential \
    # QGIS and dependencies
    software-properties-common \
    gnupg \
    wget \
    # GDAL and geospatial libraries
    gdal-bin \
    libgdal-dev \
    # Other dependencies
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Add QGIS repository
RUN wget -qO - https://qgis.org/downloads/qgis-2022.gpg.key | gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/qgis-archive.gpg --import && \
    chmod a+r /etc/apt/trusted.gpg.d/qgis-archive.gpg && \
    add-apt-repository "deb https://qgis.org/ubuntu $(lsb_release -c -s) main"

# Install QGIS and PyQGIS
RUN apt-get update && apt-get install -y \
    qgis \
    python3-qgis \
    qgis-plugin-grass \
    && rm -rf /var/lib/apt/lists/*

# Set GDAL environment variables
ENV CPLUS_INCLUDE_PATH=/usr/include/gdal
ENV C_INCLUDE_PATH=/usr/include/gdal
ENV GDAL_DATA=/usr/share/gdal

# Create working directory
WORKDIR /app

# Copy requirements files
COPY requirements.txt .
COPY gis_tools_requirements.txt .

# Upgrade pip and install Python packages
RUN python3 -m pip install --upgrade pip setuptools wheel

# Install base requirements
RUN pip3 install --no-cache-dir -r requirements.txt

# Install GIS tools requirements
RUN pip3 install --no-cache-dir -r gis_tools_requirements.txt

# Install WhiteboxTools binary
RUN pip3 install whitebox && \
    python3 -c "import whitebox; wbt = whitebox.WhiteboxTools(); wbt.download_wbt()"

# Copy application code
COPY . .

# Set Python path for QGIS
ENV PYTHONPATH=/usr/lib/python3/dist-packages:$PYTHONPATH

# Create directories for data and outputs
RUN mkdir -p /app/data /app/outputs /app/temp

# Set permissions
RUN chmod -R 755 /app

# Expose ports
EXPOSE 8810 8811 8812

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8812/health || exit 1

# Default command
CMD ["python3", "-m", "uvicorn", "rag_server.geogpt_api:app", "--host", "0.0.0.0", "--port", "8812"] 